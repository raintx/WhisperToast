name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necess√°rio para o packager obter hist√≥rico de commits

      - name: Create .pkgmeta file
        run: |
          cat > .pkgmeta << 'EOF'
package-as: WhisperToast

manual-changelog:
  filename: CHANGELOG.md
  markup-type: markdown

ignore:
  - .github
  - .gitignore
  - README.md

enable-nolib-creation: no
EOF

      - name: Build addon with BigWigs packager
        run: |
          curl -s https://raw.githubusercontent.com/BigWigsMods/packager/master/release.sh | bash -s -- -l

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: whispertoast-release
          path: .release/*.zip

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: .release/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to CurseForge
        if: startsWith(github.ref, 'refs/tags/') && secrets.CURSEFORGE_API_TOKEN != ''
        env:
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_API_TOKEN }}
          PROJECT_ID: "1367932"
        shell: bash
        run: |
          ZIP_PATH=$(ls .release/*.zip | head -n 1)
          if [ -z "$ZIP_PATH" ]; then
            echo "‚ùå No release zip found in .release/"
            exit 1
          fi
          
          echo "üì¶ Found release file: $ZIP_PATH"

          VERSION="${GITHUB_REF#refs/tags/}"
          echo "üè∑Ô∏è Version: $VERSION"

          # IDs de vers√£o do WoW (atualize conforme necess√°rio)
          # 10.2.7 = 11127, 11.0.0 = 11501 (exemplo)
          GAME_VERSION_IDS="11127"  # Ajuste para sua vers√£o

          cat <<EOF > metadata.json
{
  "displayName": "WhisperToast ${VERSION}",
  "gameVersions": [${GAME_VERSION_IDS}],
  "releaseType": "release",
  "changelogType": "markdown",
  "changelog": "## WhisperToast ${VERSION}\n\nAutomated release build.\n\n### Features\n- Multi-language support (9 languages)\n- Customizable notifications\n- Individual sound controls\n- Animated anchor\n- Portrait support"
}
EOF

          echo "üì§ Uploading to CurseForge..."
          RESPONSE=$(curl -sS -w "\n%{http_code}" -X POST \
            -H "x-api-token: ${CURSEFORGE_TOKEN}" \
            -F "metadata=@metadata.json" \
            -F "file=@${ZIP_PATH}" \
            "https://www.curseforge.com/api/projects/${PROJECT_ID}/upload")
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n-1)
          
          if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 201 ]; then
            echo "‚úÖ Successfully uploaded to CurseForge!"
            echo "$BODY"
          else
            echo "‚ùå Failed to upload to CurseForge (HTTP $HTTP_CODE)"
            echo "$BODY"
            exit 1
          fi

      - name: Publish to WoWInterface (Optional)
        if: startsWith(github.ref, 'refs/tags/') && secrets.WOWI_API_TOKEN != ''
        env:
          WOWI_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
          WOWI_ID: "YOUR_WOWI_ID"  # Substitua pelo seu ID do WoWInterface
        shell: bash
        run: |
          ZIP_PATH=$(ls .release/*.zip | head -n 1)
          VERSION="${GITHUB_REF#refs/tags/}"
          
          echo "üì§ Uploading to WoWInterface..."
          curl -sS -X POST \
            -H "x-api-token: ${WOWI_TOKEN}" \
            -F "id=${WOWI_ID}" \
            -F "version=${VERSION}" \
            -F "updatefile=@${ZIP_PATH}" \
            "https://api.wowinterface.com/addons/update"
          
          echo "‚úÖ Upload to WoWInterface completed!"